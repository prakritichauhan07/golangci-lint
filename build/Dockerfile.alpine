# stage 1 building the code
FROM golang:1.15-alpine as builder

COPY / /golang
WORKDIR /golang
RUN go version && ls -l /usr/local/
RUN CGO_ENABLED=0 go build -o golangci-lint ./cmd/golangci-lint/main.go

# stage 2
#FROM golang:1.15-alpine
FROM alpine:3.12.0
# gcc is required to support cgo;
# git and mercurial are needed most times for go get`, etc.
# See https://github.com/docker-library/golang/issues/80

RUN apk --no-cache add gcc musl-dev git mercurial

# don't place it into $GOPATH/bin because Drone mounts $GOPATH as volume
COPY --from=builder /usr/local/go/ /usr/local/go/
RUN export PATH="/usr/local/go/bin:$PATH" && go version
COPY --from=builder /golang/golangci-lint /usr/bin/
CMD ["golangci-lint"]
